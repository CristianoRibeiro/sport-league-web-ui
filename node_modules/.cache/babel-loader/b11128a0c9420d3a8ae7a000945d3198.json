{"ast":null,"code":"/**\n * react-virtual\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { observeElementRect, observeElementOffset, elementScroll, observeWindowRect, observeWindowOffset, windowScroll, Virtualizer } from '@tanstack/virtual-core';\nexport * from '@tanstack/virtual-core'; //\n\nvar useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction useVirtualizerBase(options) {\n  var rerender = React.useReducer(function () {\n    return {};\n  }, {})[1];\n\n  var resolvedOptions = _extends({}, options, {\n    onChange: function onChange(instance, sync) {\n      if (sync) {\n        flushSync(rerender);\n      } else {\n        rerender();\n      }\n\n      options.onChange == null || options.onChange(instance, sync);\n    }\n  });\n\n  var _React$useState = React.useState(function () {\n    return new Virtualizer(resolvedOptions);\n  }),\n      instance = _React$useState[0];\n\n  instance.setOptions(resolvedOptions);\n  React.useEffect(function () {\n    return instance._didMount();\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    return instance._willUpdate();\n  });\n  return instance;\n}\n\nfunction useVirtualizer(options) {\n  return useVirtualizerBase(_extends({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll\n  }, options));\n}\n\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase(_extends({\n    getScrollElement: function getScrollElement() {\n      return typeof document !== 'undefined' ? window : null;\n    },\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: typeof document !== 'undefined' ? window.scrollY : undefined\n  }, options));\n}\n\nexport { useVirtualizer, useWindowVirtualizer };","map":{"version":3,"mappings":";;;;;;;;;;;;;;wCAeA;;AAEA,IAAMA,yBAAyB,GAC7B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,KAAK,CAACC,eAAxC,GAA0DD,KAAK,CAACE,SADlE;;AAGA,SAASC,kBAAT,CAIEC,OAJF,EAK6C;EAC3C,IAAMC,QAAQ,GAAGL,KAAK,CAACM,UAANN,CAAiB;IAAA,OAAO,EAAP;EAAU,CAA3BA,EAA6B,EAA7BA,EAAiC,CAAjCA,CAAjB;;EAEA,IAAMO,eAAiE,gBAClEH,OADkE,EAC3D;IACVI,QAAQ,EAAE,kBAACC,QAAD,EAAWC,IAAX,EAAoB;MAC5B,IAAIA,IAAJ,EAAU;QACRC,SAAS,CAACN,QAAD,CAATM;MACD,CAFD,MAEO;QACLN,QAAQ;MACV;;MACAD,OAAO,CAACI,QAARJ,IAAgB,IAAhBA,WAAO,CAACI,QAARJ,CAAmBK,QAAnBL,EAA6BM,IAA7BN;IACF;EARU,CAD2D,CAAvE;;EAYA,sBAAmBJ,KAAK,CAACY,QAANZ,CACjB;IAAA,OAAM,IAAIa,WAAJ,CAA8CN,eAA9C,CAAN;EACF,CAFmBP,CAAnB;EAAA,IAAOS,QAAQ,qBAAf;;EAIAA,QAAQ,CAACK,UAATL,CAAoBF,eAApBE;EAEAT,KAAK,CAACE,SAANF,CAAgB,YAAM;IACpB,OAAOS,QAAQ,CAACM,SAATN,EAAP;EACD,CAFDT,EAEG,EAFHA;EAIAF,yBAAyB,CAAC,YAAM;IAC9B,OAAOW,QAAQ,CAACO,WAATP,EAAP;EACD,CAFwB,CAAzBX;EAIA,OAAOW,QAAP;AACF;;AAEO,SAASQ,cAAT,CAILb,OAJK,EAQsC;EAC3C,OAAOD,kBAAkB;IACvBe,kBAAkB,EAAEA,kBADG;IAEvBC,oBAAoB,EAAEA,oBAFC;IAGvBC,UAAU,EAAEC;EAHW,GAIpBjB,OAJoB,EAAzB;AAMF;;AAEO,SAASkB,oBAAT,CACLlB,OADK,EAQ8B;EACnC,OAAOD,kBAAkB;IACvBoB,gBAAgB,EAAE;MAAA,OAAO,OAAOxB,QAAP,KAAoB,WAApB,GAAkCyB,MAAlC,GAA2C,IAAlD;IAAuD,CADlD;IAEvBN,kBAAkB,EAAEO,iBAFG;IAGvBN,oBAAoB,EAAEO,mBAHC;IAIvBN,UAAU,EAAEO,YAJW;IAKvBC,aAAa,EAAE,OAAO7B,QAAP,KAAoB,WAApB,GAAkCyB,MAAM,CAACK,OAAzC,GAAmDC;EAL3C,GAMpB1B,OANoB,EAAzB;AAQF","names":["useIsomorphicLayoutEffect","document","React","useLayoutEffect","useEffect","useVirtualizerBase","options","rerender","useReducer","resolvedOptions","onChange","instance","sync","flushSync","useState","Virtualizer","setOptions","_didMount","_willUpdate","useVirtualizer","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","getScrollElement","window","observeWindowRect","observeWindowOffset","windowScroll","initialOffset","scrollY","undefined"],"sources":["/Users/cristianoribeiro/CODE/cristiano-ribeiro-cXXv-sports-league-web-ui-Z2zA/node_modules/@tanstack/react-virtual/src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { flushSync } from 'react-dom'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance, sync) => {\n      if (sync) {\n        flushSync(rerender)\n      } else {\n        rerender()\n      }\n      options.onChange?.(instance, sync)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: typeof document !== 'undefined' ? window.scrollY : undefined,\n    ...options,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}