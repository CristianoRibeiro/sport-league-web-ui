{"ast":null,"code":"/**\n * virtual-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { memo, notUndefined, approxEqual } from './utils.mjs';\nexport { approxEqual, memo, notUndefined } from './utils.mjs'; //\n//\n\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\n\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.startIndex - range.overscan, 0);\n  var end = Math.min(range.endIndex + range.overscan, range.count - 1);\n  var arr = [];\n\n  for (var _i = start; _i <= end; _i++) {\n    arr.push(_i);\n  }\n\n  return arr;\n};\n\nvar observeElementRect = function observeElementRect(instance, cb) {\n  var element = instance.scrollElement;\n\n  if (!element) {\n    return;\n  }\n\n  var handler = function handler(rect) {\n    var width = rect.width,\n        height = rect.height;\n    cb({\n      width: Math.round(width),\n      height: Math.round(height)\n    });\n  };\n\n  handler(element.getBoundingClientRect());\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n\n    if (entry != null && entry.borderBoxSize) {\n      var box = entry.borderBoxSize[0];\n\n      if (box) {\n        handler({\n          width: box.inlineSize,\n          height: box.blockSize\n        });\n        return;\n      }\n    }\n\n    handler(element.getBoundingClientRect());\n  });\n  observer.observe(element, {\n    box: 'border-box'\n  });\n  return function () {\n    observer.unobserve(element);\n  };\n};\n\nvar observeWindowRect = function observeWindowRect(instance, cb) {\n  var element = instance.scrollElement;\n\n  if (!element) {\n    return;\n  }\n\n  var handler = function handler() {\n    cb({\n      width: element.innerWidth,\n      height: element.innerHeight\n    });\n  };\n\n  handler();\n  element.addEventListener('resize', handler, {\n    passive: true\n  });\n  return function () {\n    element.removeEventListener('resize', handler);\n  };\n};\n\nvar observeElementOffset = function observeElementOffset(instance, cb) {\n  var element = instance.scrollElement;\n\n  if (!element) {\n    return;\n  }\n\n  var handler = function handler() {\n    cb(element[instance.options.horizontal ? 'scrollLeft' : 'scrollTop']);\n  };\n\n  handler();\n  element.addEventListener('scroll', handler, {\n    passive: true\n  });\n  return function () {\n    element.removeEventListener('scroll', handler);\n  };\n};\n\nvar observeWindowOffset = function observeWindowOffset(instance, cb) {\n  var element = instance.scrollElement;\n\n  if (!element) {\n    return;\n  }\n\n  var handler = function handler() {\n    cb(element[instance.options.horizontal ? 'scrollX' : 'scrollY']);\n  };\n\n  handler();\n  element.addEventListener('scroll', handler, {\n    passive: true\n  });\n  return function () {\n    element.removeEventListener('scroll', handler);\n  };\n};\n\nvar measureElement = function measureElement(element, entry, instance) {\n  if (entry != null && entry.borderBoxSize) {\n    var box = entry.borderBoxSize[0];\n\n    if (box) {\n      var size = Math.round(box[instance.options.horizontal ? 'inlineSize' : 'blockSize']);\n      return size;\n    }\n  }\n\n  return Math.round(element.getBoundingClientRect()[instance.options.horizontal ? 'width' : 'height']);\n};\n\nvar windowScroll = function windowScroll(offset, _ref, instance) {\n  var _instance$scrollEleme, _instance$scrollEleme2;\n\n  var _ref$adjustments = _ref.adjustments,\n      adjustments = _ref$adjustments === void 0 ? 0 : _ref$adjustments,\n      behavior = _ref.behavior;\n  var toOffset = offset + adjustments;\n  (_instance$scrollEleme = instance.scrollElement) == null || _instance$scrollEleme.scrollTo == null || _instance$scrollEleme.scrollTo((_instance$scrollEleme2 = {}, _instance$scrollEleme2[instance.options.horizontal ? 'left' : 'top'] = toOffset, _instance$scrollEleme2.behavior = behavior, _instance$scrollEleme2));\n};\n\nvar elementScroll = function elementScroll(offset, _ref2, instance) {\n  var _instance$scrollEleme3, _instance$scrollEleme4;\n\n  var _ref2$adjustments = _ref2.adjustments,\n      adjustments = _ref2$adjustments === void 0 ? 0 : _ref2$adjustments,\n      behavior = _ref2.behavior;\n  var toOffset = offset + adjustments;\n  (_instance$scrollEleme3 = instance.scrollElement) == null || _instance$scrollEleme3.scrollTo == null || _instance$scrollEleme3.scrollTo((_instance$scrollEleme4 = {}, _instance$scrollEleme4[instance.options.horizontal ? 'left' : 'top'] = toOffset, _instance$scrollEleme4.behavior = behavior, _instance$scrollEleme4));\n};\n\nvar Virtualizer = function Virtualizer(_opts) {\n  var _this = this;\n\n  this.unsubs = [];\n  this.scrollElement = null;\n  this.isScrolling = false;\n  this.isScrollingTimeoutId = null;\n  this.scrollToIndexTimeoutId = null;\n  this.measurementsCache = [];\n  this.itemSizeCache = new Map();\n  this.pendingMeasuredCacheIndexes = [];\n  this.scrollDirection = null;\n  this.scrollAdjustments = 0;\n  this.measureElementCache = new Map();\n\n  this.observer = function () {\n    var _ro = null;\n\n    var get = function get() {\n      if (_ro) {\n        return _ro;\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return _ro = new ResizeObserver(function (entries) {\n          entries.forEach(function (entry) {\n            _this._measureElement(entry.target, entry);\n          });\n        });\n      } else {\n        return null;\n      }\n    };\n\n    return {\n      disconnect: function disconnect() {\n        var _get;\n\n        return (_get = get()) == null ? void 0 : _get.disconnect();\n      },\n      observe: function observe(target) {\n        var _get2;\n\n        return (_get2 = get()) == null ? void 0 : _get2.observe(target, {\n          box: 'border-box'\n        });\n      },\n      unobserve: function unobserve(target) {\n        var _get3;\n\n        return (_get3 = get()) == null ? void 0 : _get3.unobserve(target);\n      }\n    };\n  }();\n\n  this.range = null;\n\n  this.setOptions = function (opts) {\n    Object.entries(opts).forEach(function (_ref3) {\n      var key = _ref3[0],\n          value = _ref3[1];\n      if (typeof value === 'undefined') delete opts[key];\n    });\n    _this.options = _extends({\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: function onChange() {},\n      measureElement: measureElement,\n      initialRect: {\n        width: 0,\n        height: 0\n      },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1\n    }, opts);\n  };\n\n  this.notify = function (sync) {\n    _this.options.onChange == null || _this.options.onChange(_this, sync);\n  };\n\n  this.maybeNotify = memo(function () {\n    _this.calculateRange();\n\n    return [_this.isScrolling, _this.range ? _this.range.startIndex : null, _this.range ? _this.range.endIndex : null];\n  }, function (isScrolling) {\n    _this.notify(isScrolling);\n  }, {\n    key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n    debug: function debug() {\n      return _this.options.debug;\n    },\n    initialDeps: [this.isScrolling, this.range ? this.range.startIndex : null, this.range ? this.range.endIndex : null]\n  });\n\n  this.cleanup = function () {\n    _this.unsubs.filter(Boolean).forEach(function (d) {\n      return d();\n    });\n\n    _this.unsubs = [];\n    _this.scrollElement = null;\n  };\n\n  this._didMount = function () {\n    _this.measureElementCache.forEach(_this.observer.observe);\n\n    return function () {\n      _this.observer.disconnect();\n\n      _this.cleanup();\n    };\n  };\n\n  this._willUpdate = function () {\n    var scrollElement = _this.options.getScrollElement();\n\n    if (_this.scrollElement !== scrollElement) {\n      _this.cleanup();\n\n      _this.scrollElement = scrollElement;\n\n      _this._scrollToOffset(_this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined\n      });\n\n      _this.unsubs.push(_this.options.observeElementRect(_this, function (rect) {\n        _this.scrollRect = rect;\n\n        _this.maybeNotify();\n      }));\n\n      _this.unsubs.push(_this.options.observeElementOffset(_this, function (offset) {\n        _this.scrollAdjustments = 0;\n\n        if (_this.scrollOffset === offset) {\n          return;\n        }\n\n        if (_this.isScrollingTimeoutId !== null) {\n          clearTimeout(_this.isScrollingTimeoutId);\n          _this.isScrollingTimeoutId = null;\n        }\n\n        _this.isScrolling = true;\n        _this.scrollDirection = _this.scrollOffset < offset ? 'forward' : 'backward';\n        _this.scrollOffset = offset;\n\n        _this.maybeNotify();\n\n        _this.isScrollingTimeoutId = setTimeout(function () {\n          _this.isScrollingTimeoutId = null;\n          _this.isScrolling = false;\n          _this.scrollDirection = null;\n\n          _this.maybeNotify();\n        }, _this.options.scrollingDelay);\n      }));\n    }\n  };\n\n  this.getSize = function () {\n    return _this.scrollRect[_this.options.horizontal ? 'width' : 'height'];\n  };\n\n  this.memoOptions = memo(function () {\n    return [_this.options.count, _this.options.paddingStart, _this.options.scrollMargin, _this.options.getItemKey];\n  }, function (count, paddingStart, scrollMargin, getItemKey) {\n    _this.pendingMeasuredCacheIndexes = [];\n    return {\n      count: count,\n      paddingStart: paddingStart,\n      scrollMargin: scrollMargin,\n      getItemKey: getItemKey\n    };\n  }, {\n    key: false\n  });\n\n  this.getFurthestMeasurement = function (measurements, index) {\n    var furthestMeasurementsFound = new Map();\n    var furthestMeasurements = new Map();\n\n    for (var m = index - 1; m >= 0; m--) {\n      var measurement = measurements[m];\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue;\n      }\n\n      var previousFurthestMeasurement = furthestMeasurements.get(measurement.lane);\n\n      if (previousFurthestMeasurement == null || measurement.end > previousFurthestMeasurement.end) {\n        furthestMeasurements.set(measurement.lane, measurement);\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true);\n      }\n\n      if (furthestMeasurementsFound.size === _this.options.lanes) {\n        break;\n      }\n    }\n\n    return furthestMeasurements.size === _this.options.lanes ? Array.from(furthestMeasurements.values()).sort(function (a, b) {\n      return a.end - b.end;\n    })[0] : undefined;\n  };\n\n  this.getMeasurements = memo(function () {\n    return [_this.memoOptions(), _this.itemSizeCache];\n  }, function (_ref4, itemSizeCache) {\n    var count = _ref4.count,\n        paddingStart = _ref4.paddingStart,\n        scrollMargin = _ref4.scrollMargin,\n        getItemKey = _ref4.getItemKey;\n    var min = _this.pendingMeasuredCacheIndexes.length > 0 ? Math.min.apply(Math, _this.pendingMeasuredCacheIndexes) : 0;\n    _this.pendingMeasuredCacheIndexes = [];\n\n    var measurements = _this.measurementsCache.slice(0, min);\n\n    for (var _i2 = min; _i2 < count; _i2++) {\n      var key = getItemKey(_i2);\n      var furthestMeasurement = _this.options.lanes === 1 ? measurements[_i2 - 1] : _this.getFurthestMeasurement(measurements, _i2);\n      var start = furthestMeasurement ? furthestMeasurement.end : paddingStart + scrollMargin;\n      var measuredSize = itemSizeCache.get(key);\n      var size = typeof measuredSize === 'number' ? measuredSize : _this.options.estimateSize(_i2);\n      var end = start + size;\n      var lane = furthestMeasurement ? furthestMeasurement.lane : _i2 % _this.options.lanes;\n      measurements[_i2] = {\n        index: _i2,\n        start: start,\n        size: size,\n        end: end,\n        key: key,\n        lane: lane\n      };\n    }\n\n    _this.measurementsCache = measurements;\n    return measurements;\n  }, {\n    key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n    debug: function debug() {\n      return _this.options.debug;\n    }\n  });\n  this.calculateRange = memo(function () {\n    return [_this.getMeasurements(), _this.getSize(), _this.scrollOffset];\n  }, function (measurements, outerSize, scrollOffset) {\n    return _this.range = measurements.length > 0 && outerSize > 0 ? calculateRange({\n      measurements: measurements,\n      outerSize: outerSize,\n      scrollOffset: scrollOffset\n    }) : null;\n  }, {\n    key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n    debug: function debug() {\n      return _this.options.debug;\n    }\n  });\n  this.getIndexes = memo(function () {\n    return [_this.options.rangeExtractor, _this.calculateRange(), _this.options.overscan, _this.options.count];\n  }, function (rangeExtractor, range, overscan, count) {\n    return range === null ? [] : rangeExtractor(_extends({}, range, {\n      overscan: overscan,\n      count: count\n    }));\n  }, {\n    key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n    debug: function debug() {\n      return _this.options.debug;\n    }\n  });\n\n  this.indexFromElement = function (node) {\n    var attributeName = _this.options.indexAttribute;\n    var indexStr = node.getAttribute(attributeName);\n\n    if (!indexStr) {\n      console.warn(\"Missing attribute name '\" + attributeName + \"={index}' on measured element.\");\n      return -1;\n    }\n\n    return parseInt(indexStr, 10);\n  };\n\n  this._measureElement = function (node, entry) {\n    var item = _this.measurementsCache[_this.indexFromElement(node)];\n\n    if (!item || !node.isConnected) {\n      _this.measureElementCache.forEach(function (cached, key) {\n        if (cached === node) {\n          _this.observer.unobserve(node);\n\n          _this.measureElementCache[\"delete\"](key);\n        }\n      });\n\n      return;\n    }\n\n    var prevNode = _this.measureElementCache.get(item.key);\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        _this.observer.unobserve(prevNode);\n      }\n\n      _this.observer.observe(node);\n\n      _this.measureElementCache.set(item.key, node);\n    }\n\n    var measuredItemSize = _this.options.measureElement(node, entry, _this);\n\n    _this.resizeItem(item, measuredItemSize);\n  };\n\n  this.resizeItem = function (item, size) {\n    var _this$itemSizeCache$g;\n\n    var itemSize = (_this$itemSizeCache$g = _this.itemSizeCache.get(item.key)) != null ? _this$itemSizeCache$g : item.size;\n    var delta = size - itemSize;\n\n    if (delta !== 0) {\n      if (item.start < _this.scrollOffset) {\n        if (process.env.NODE_ENV !== 'production' && _this.options.debug) {\n          console.info('correction', delta);\n        }\n\n        _this._scrollToOffset(_this.scrollOffset, {\n          adjustments: _this.scrollAdjustments += delta,\n          behavior: undefined\n        });\n      }\n\n      _this.pendingMeasuredCacheIndexes.push(item.index);\n\n      _this.itemSizeCache = new Map(_this.itemSizeCache.set(item.key, size));\n\n      _this.notify(false);\n    }\n  };\n\n  this.measureElement = function (node) {\n    if (!node) {\n      return;\n    }\n\n    _this._measureElement(node, undefined);\n  };\n\n  this.getVirtualItems = memo(function () {\n    return [_this.getIndexes(), _this.getMeasurements()];\n  }, function (indexes, measurements) {\n    var virtualItems = [];\n\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      var _i3 = indexes[k];\n      var measurement = measurements[_i3];\n      virtualItems.push(measurement);\n    }\n\n    return virtualItems;\n  }, {\n    key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n    debug: function debug() {\n      return _this.options.debug;\n    }\n  });\n\n  this.getVirtualItemForOffset = function (offset) {\n    var measurements = _this.getMeasurements();\n\n    return notUndefined(measurements[findNearestBinarySearch(0, measurements.length - 1, function (index) {\n      return notUndefined(measurements[index]).start;\n    }, offset)]);\n  };\n\n  this.getOffsetForAlignment = function (toOffset, align) {\n    var size = _this.getSize();\n\n    if (align === 'auto') {\n      if (toOffset <= _this.scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= _this.scrollOffset + size) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    if (align === 'start') {\n      toOffset = toOffset;\n    } else if (align === 'end') {\n      toOffset = toOffset - size;\n    } else if (align === 'center') {\n      toOffset = toOffset - size / 2;\n    }\n\n    var scrollSizeProp = _this.options.horizontal ? 'scrollWidth' : 'scrollHeight';\n    var scrollSize = _this.scrollElement ? 'document' in _this.scrollElement ? _this.scrollElement.document.documentElement[scrollSizeProp] : _this.scrollElement[scrollSizeProp] : 0;\n\n    var maxOffset = scrollSize - _this.getSize();\n\n    return Math.max(Math.min(maxOffset, toOffset), 0);\n  };\n\n  this.getOffsetForIndex = function (index, align) {\n    if (align === void 0) {\n      align = 'auto';\n    }\n\n    index = Math.max(0, Math.min(index, _this.options.count - 1));\n    var measurement = notUndefined(_this.getMeasurements()[index]);\n\n    if (align === 'auto') {\n      if (measurement.end >= _this.scrollOffset + _this.getSize() - _this.options.scrollPaddingEnd) {\n        align = 'end';\n      } else if (measurement.start <= _this.scrollOffset + _this.options.scrollPaddingStart) {\n        align = 'start';\n      } else {\n        return [_this.scrollOffset, align];\n      }\n    }\n\n    var toOffset = align === 'end' ? measurement.end + _this.options.scrollPaddingEnd : measurement.start - _this.options.scrollPaddingStart;\n    return [_this.getOffsetForAlignment(toOffset, align), align];\n  };\n\n  this.isDynamicMode = function () {\n    return _this.measureElementCache.size > 0;\n  };\n\n  this.cancelScrollToIndex = function () {\n    if (_this.scrollToIndexTimeoutId !== null) {\n      clearTimeout(_this.scrollToIndexTimeoutId);\n      _this.scrollToIndexTimeoutId = null;\n    }\n  };\n\n  this.scrollToOffset = function (toOffset, _temp) {\n    var _ref5 = _temp === void 0 ? {} : _temp,\n        _ref5$align = _ref5.align,\n        align = _ref5$align === void 0 ? 'start' : _ref5$align,\n        behavior = _ref5.behavior;\n\n    _this.cancelScrollToIndex();\n\n    if (behavior === 'smooth' && _this.isDynamicMode()) {\n      console.warn('The `smooth` scroll behavior is not fully supported with dynamic size.');\n    }\n\n    _this._scrollToOffset(_this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior: behavior\n    });\n  };\n\n  this.scrollToIndex = function (index, _temp2) {\n    var _ref6 = _temp2 === void 0 ? {} : _temp2,\n        _ref6$align = _ref6.align,\n        initialAlign = _ref6$align === void 0 ? 'auto' : _ref6$align,\n        behavior = _ref6.behavior;\n\n    index = Math.max(0, Math.min(index, _this.options.count - 1));\n\n    _this.cancelScrollToIndex();\n\n    if (behavior === 'smooth' && _this.isDynamicMode()) {\n      console.warn('The `smooth` scroll behavior is not fully supported with dynamic size.');\n    }\n\n    var _this$getOffsetForInd = _this.getOffsetForIndex(index, initialAlign),\n        toOffset = _this$getOffsetForInd[0],\n        align = _this$getOffsetForInd[1];\n\n    _this._scrollToOffset(toOffset, {\n      adjustments: undefined,\n      behavior: behavior\n    });\n\n    if (behavior !== 'smooth' && _this.isDynamicMode()) {\n      _this.scrollToIndexTimeoutId = setTimeout(function () {\n        _this.scrollToIndexTimeoutId = null;\n\n        var elementInDOM = _this.measureElementCache.has(_this.options.getItemKey(index));\n\n        if (elementInDOM) {\n          var _this$getOffsetForInd2 = _this.getOffsetForIndex(index, align),\n              _toOffset = _this$getOffsetForInd2[0];\n\n          if (!approxEqual(_toOffset, _this.scrollOffset)) {\n            _this.scrollToIndex(index, {\n              align: align,\n              behavior: behavior\n            });\n          }\n        } else {\n          _this.scrollToIndex(index, {\n            align: align,\n            behavior: behavior\n          });\n        }\n      });\n    }\n  };\n\n  this.scrollBy = function (delta, _temp3) {\n    var _ref7 = _temp3 === void 0 ? {} : _temp3,\n        behavior = _ref7.behavior;\n\n    _this.cancelScrollToIndex();\n\n    if (behavior === 'smooth' && _this.isDynamicMode()) {\n      console.warn('The `smooth` scroll behavior is not fully supported with dynamic size.');\n    }\n\n    _this._scrollToOffset(_this.scrollOffset + delta, {\n      adjustments: undefined,\n      behavior: behavior\n    });\n  };\n\n  this.getTotalSize = function () {\n    var _this$getMeasurements;\n\n    return (((_this$getMeasurements = _this.getMeasurements()[_this.options.count - 1]) == null ? void 0 : _this$getMeasurements.end) || _this.options.paddingStart) - _this.options.scrollMargin + _this.options.paddingEnd;\n  };\n\n  this._scrollToOffset = function (offset, _ref8) {\n    var adjustments = _ref8.adjustments,\n        behavior = _ref8.behavior;\n\n    _this.options.scrollToFn(offset, {\n      behavior: behavior,\n      adjustments: adjustments\n    }, _this);\n  };\n\n  this.measure = function () {\n    _this.itemSizeCache = new Map();\n\n    _this.notify(false);\n  };\n\n  this.setOptions(_opts);\n  this.scrollRect = this.options.initialRect;\n  this.scrollOffset = this.options.initialOffset;\n  this.measurementsCache = this.options.initialMeasurementsCache;\n  this.measurementsCache.forEach(function (item) {\n    _this.itemSizeCache.set(item.key, item.size);\n  });\n  this.maybeNotify();\n};\n\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref9) {\n  var measurements = _ref9.measurements,\n      outerSize = _ref9.outerSize,\n      scrollOffset = _ref9.scrollOffset;\n  var count = measurements.length - 1;\n\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n\n  var startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset);\n  var endIndex = startIndex;\n\n  while (endIndex < count && measurements[endIndex].end < scrollOffset + outerSize) {\n    endIndex++;\n  }\n\n  return {\n    startIndex: startIndex,\n    endIndex: endIndex\n  };\n}\n\nexport { Virtualizer, defaultKeyExtractor, defaultRangeExtractor, elementScroll, measureElement, observeElementOffset, observeElementRect, observeWindowOffset, observeWindowRect, windowScroll };","map":{"version":3,"mappings":"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","names":["defaultKeyExtractor","index","defaultRangeExtractor","range","start","Math","max","startIndex","overscan","end","min","endIndex","count","arr","i","push","observeElementRect","instance","cb","element","scrollElement","handler","rect","width","height","round","getBoundingClientRect","observer","ResizeObserver","entries","entry","borderBoxSize","box","inlineSize","blockSize","observe","unobserve","observeWindowRect","innerWidth","innerHeight","addEventListener","passive","removeEventListener","observeElementOffset","options","horizontal","observeWindowOffset","measureElement","size","windowScroll","offset","_ref","adjustments","_ref$adjustments","behavior","toOffset","scrollTo","_instance$scrollEleme","_instance$scrollEleme2","elementScroll","_ref2","_ref2$adjustments","_instance$scrollEleme3","_instance$scrollEleme4","Virtualizer","opts","unsubs","isScrolling","isScrollingTimeoutId","scrollToIndexTimeoutId","measurementsCache","itemSizeCache","Map","pendingMeasuredCacheIndexes","scrollDirection","scrollAdjustments","measureElementCache","_ro","get","forEach","_this","_measureElement","target","disconnect","_get","_get2","_get3","setOptions","Object","key","value","_extends","debug","initialOffset","paddingStart","paddingEnd","scrollPaddingStart","scrollPaddingEnd","getItemKey","rangeExtractor","onChange","initialRect","scrollMargin","scrollingDelay","indexAttribute","initialMeasurementsCache","lanes","notify","sync","maybeNotify","memo","calculateRange","process","env","NODE_ENV","initialDeps","cleanup","filter","Boolean","d","_didMount","_willUpdate","getScrollElement","_scrollToOffset","scrollOffset","undefined","scrollRect","clearTimeout","setTimeout","getSize","memoOptions","getFurthestMeasurement","measurements","furthestMeasurementsFound","furthestMeasurements","m","measurement","has","lane","previousFurthestMeasurement","set","Array","from","values","sort","a","b","getMeasurements","length","apply","slice","furthestMeasurement","measuredSize","estimateSize","outerSize","getIndexes","indexFromElement","node","attributeName","indexStr","getAttribute","console","warn","parseInt","item","isConnected","cached","prevNode","measuredItemSize","resizeItem","itemSize","_this$itemSizeCache$g","delta","info","getVirtualItems","indexes","virtualItems","k","len","getVirtualItemForOffset","notUndefined","findNearestBinarySearch","getOffsetForAlignment","align","scrollSizeProp","scrollSize","document","documentElement","maxOffset","getOffsetForIndex","isDynamicMode","cancelScrollToIndex","scrollToOffset","_temp","_ref5$align","scrollToIndex","_temp2","_ref6$align","initialAlign","elementInDOM","approxEqual","scrollBy","_temp3","getTotalSize","_this$getMeasurements","_ref8","scrollToFn","measure","low","high","getCurrentValue","middle","currentValue","_ref9","getOffset"],"sources":["/Users/cristianoribeiro/CODE/cristiano-ribeiro-cXXv-sports-league-web-ui-Z2zA/node_modules/@tanstack/virtual-core/src/index.ts"],"sourcesContent":["import { approxEqual, memo, notUndefined } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n  lane: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const observeElementRect = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = (rect: Rect) => {\n    const { width, height } = rect\n    cb({ width: Math.round(width), height: Math.round(height) })\n  }\n\n  handler(element.getBoundingClientRect())\n\n  const observer = new ResizeObserver((entries) => {\n    const entry = entries[0]\n    if (entry?.borderBoxSize) {\n      const box = entry.borderBoxSize[0]\n      if (box) {\n        handler({ width: box.inlineSize, height: box.blockSize })\n        return\n      }\n    }\n    handler(element.getBoundingClientRect())\n  })\n\n  observer.observe(element, { box: 'border-box' })\n\n  return () => {\n    observer.unobserve(element)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<Window, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight })\n  }\n  handler()\n\n  element.addEventListener('resize', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('resize', handler)\n  }\n}\n\nexport const observeElementOffset = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollLeft' : 'scrollTop'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const observeWindowOffset = (\n  instance: Virtualizer<Window, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollX' : 'scrollY'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  if (entry?.borderBoxSize) {\n    const box = entry.borderBoxSize[0]\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? 'inlineSize' : 'blockSize'],\n      )\n      return size\n    }\n  }\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    sync: boolean,\n  ) => void\n  measureElement?: (\n    element: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: VirtualItem[]\n  lanes?: number\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private scrollToIndexTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemSizeCache = new Map<Key, number>()\n  private pendingMeasuredCacheIndexes: number[] = []\n  scrollRect: Rect\n  scrollOffset: number\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments: number = 0\n  measureElementCache = new Map<Key, TItemElement>()\n  private observer = (() => {\n    let _ro: ResizeObserver | null = null\n\n    const get = () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, entry)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n\n    return {\n      disconnect: () => get()?.disconnect(),\n      observe: (target: Element) =>\n        get()?.observe(target, { box: 'border-box' }),\n      unobserve: (target: Element) => get()?.unobserve(target),\n    }\n  })()\n  range: { startIndex: number; endIndex: number } | null = null\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n    this.measurementsCache = this.options.initialMeasurementsCache\n    this.measurementsCache.forEach((item) => {\n      this.itemSizeCache.set(item.key, item.size)\n    })\n\n    this.maybeNotify()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1,\n      ...opts,\n    }\n  }\n\n  private notify = (sync: boolean) => {\n    this.options.onChange?.(this, sync)\n  }\n\n  private maybeNotify = memo(\n    () => {\n      this.calculateRange()\n\n      return [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ]\n    },\n    (isScrolling) => {\n      this.notify(isScrolling)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n      debug: () => this.options.debug,\n      initialDeps: [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ] as [boolean, number | null, number | null],\n    },\n  )\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    this.measureElementCache.forEach(this.observer.observe)\n    return () => {\n      this.observer.disconnect()\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.maybeNotify()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          this.scrollAdjustments = 0\n\n          if (this.scrollOffset === offset) {\n            return\n          }\n\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          this.isScrolling = true\n          this.scrollDirection =\n            this.scrollOffset < offset ? 'forward' : 'backward'\n          this.scrollOffset = offset\n\n          this.maybeNotify()\n\n          this.isScrollingTimeoutId = setTimeout(() => {\n            this.isScrollingTimeoutId = null\n            this.isScrolling = false\n            this.scrollDirection = null\n\n            this.maybeNotify()\n          }, this.options.scrollingDelay)\n        }),\n      )\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private memoOptions = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey) => {\n      this.pendingMeasuredCacheIndexes = []\n      return {\n        count,\n        paddingStart,\n        scrollMargin,\n        getItemKey,\n      }\n    },\n    {\n      key: false,\n    },\n  )\n\n  private getFurthestMeasurement = (\n    measurements: VirtualItem[],\n    index: number,\n  ) => {\n    const furthestMeasurementsFound = new Map<number, true>()\n    const furthestMeasurements = new Map<number, VirtualItem>()\n    for (let m = index - 1; m >= 0; m--) {\n      const measurement = measurements[m]!\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue\n      }\n\n      const previousFurthestMeasurement = furthestMeasurements.get(\n        measurement.lane,\n      )\n      if (\n        previousFurthestMeasurement == null ||\n        measurement.end > previousFurthestMeasurement.end\n      ) {\n        furthestMeasurements.set(measurement.lane, measurement)\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true)\n      }\n\n      if (furthestMeasurementsFound.size === this.options.lanes) {\n        break\n      }\n    }\n\n    return furthestMeasurements.size === this.options.lanes\n      ? Array.from(furthestMeasurements.values()).sort(\n          (a, b) => a.end - b.end,\n        )[0]\n      : undefined\n  }\n\n  private getMeasurements = memo(\n    () => [this.memoOptions(), this.itemSizeCache],\n    ({ count, paddingStart, scrollMargin, getItemKey }, itemSizeCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n\n        const furthestMeasurement =\n          this.options.lanes === 1\n            ? measurements[i - 1]\n            : this.getFurthestMeasurement(measurements, i)\n\n        const start = furthestMeasurement\n          ? furthestMeasurement.end\n          : paddingStart + scrollMargin\n\n        const measuredSize = itemSizeCache.get(key)\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n\n        const end = start + size\n\n        const lane = furthestMeasurement\n          ? furthestMeasurement.lane\n          : i % this.options.lanes\n\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key,\n          lane,\n        }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      return (this.range =\n        measurements.length > 0 && outerSize > 0\n          ? calculateRange({\n              measurements,\n              outerSize,\n              scrollOffset,\n            })\n          : null)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.calculateRange(),\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return range === null\n        ? []\n        : rangeExtractor({\n            ...range,\n            overscan,\n            count,\n          })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (\n    node: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n  ) => {\n    const item = this.measurementsCache[this.indexFromElement(node)]\n\n    if (!item || !node.isConnected) {\n      this.measureElementCache.forEach((cached, key) => {\n        if (cached === node) {\n          this.observer.unobserve(node)\n          this.measureElementCache.delete(key)\n        }\n      })\n      return\n    }\n\n    const prevNode = this.measureElementCache.get(item.key)\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        this.observer.unobserve(prevNode)\n      }\n      this.observer.observe(node)\n      this.measureElementCache.set(item.key, node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, entry, this)\n\n    this.resizeItem(item, measuredItemSize)\n  }\n\n  resizeItem = (item: VirtualItem, size: number) => {\n    const itemSize = this.itemSizeCache.get(item.key) ?? item.size\n    const delta = size - itemSize\n\n    if (delta !== 0) {\n      if (item.start < this.scrollOffset) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(item.index)\n      this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size))\n\n      this.notify(false)\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, undefined)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualItemForOffset = (offset: number) => {\n    const measurements = this.getMeasurements()\n\n    return notUndefined(\n      measurements[\n        findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index: number) => notUndefined(measurements[index]).start,\n          offset,\n        )\n      ],\n    )\n  }\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= this.scrollOffset) {\n        align = 'start'\n      } else if (toOffset >= this.scrollOffset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    if (align === 'start') {\n      toOffset = toOffset\n    } else if (align === 'end') {\n      toOffset = toOffset - size\n    } else if (align === 'center') {\n      toOffset = toOffset - size / 2\n    }\n\n    const scrollSizeProp = this.options.horizontal\n      ? 'scrollWidth'\n      : 'scrollHeight'\n    const scrollSize = this.scrollElement\n      ? 'document' in this.scrollElement\n        ? this.scrollElement.document.documentElement[scrollSizeProp]\n        : this.scrollElement[scrollSizeProp]\n      : 0\n\n    const maxOffset = scrollSize - this.getSize()\n\n    return Math.max(Math.min(maxOffset, toOffset), 0)\n  }\n\n  getOffsetForIndex = (index: number, align: ScrollAlignment = 'auto') => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    const measurement = notUndefined(this.getMeasurements()[index])\n\n    if (align === 'auto') {\n      if (\n        measurement.end >=\n        this.scrollOffset + this.getSize() - this.options.scrollPaddingEnd\n      ) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        this.scrollOffset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return [this.scrollOffset, align] as const\n      }\n    }\n\n    const toOffset =\n      align === 'end'\n        ? measurement.end + this.options.scrollPaddingEnd\n        : measurement.start - this.options.scrollPaddingStart\n\n    return [this.getOffsetForAlignment(toOffset, align), align] as const\n  }\n\n  private isDynamicMode = () => this.measureElementCache.size > 0\n\n  private cancelScrollToIndex = () => {\n    if (this.scrollToIndexTimeoutId !== null) {\n      clearTimeout(this.scrollToIndexTimeoutId)\n      this.scrollToIndexTimeoutId = null\n    }\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align: initialAlign = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    const [toOffset, align] = this.getOffsetForIndex(index, initialAlign)\n\n    this._scrollToOffset(toOffset, { adjustments: undefined, behavior })\n\n    if (behavior !== 'smooth' && this.isDynamicMode()) {\n      this.scrollToIndexTimeoutId = setTimeout(() => {\n        this.scrollToIndexTimeoutId = null\n\n        const elementInDOM = this.measureElementCache.has(\n          this.options.getItemKey(index),\n        )\n\n        if (elementInDOM) {\n          const [toOffset] = this.getOffsetForIndex(index, align)\n\n          if (!approxEqual(toOffset, this.scrollOffset)) {\n            this.scrollToIndex(index, { align, behavior })\n          }\n        } else {\n          this.scrollToIndex(index, { align, behavior })\n        }\n      })\n    }\n  }\n\n  scrollBy = (delta: number, { behavior }: ScrollToOffsetOptions = {}) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.scrollOffset + delta, {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) -\n    this.options.scrollMargin +\n    this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = new Map()\n    this.notify(false)\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n"]},"metadata":{},"sourceType":"module"}